!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).isInSubnet=e()}}(function(){var e={};Object.defineProperty(e,"__esModule",{value:!0});var r="(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])",t="("+r+"[.]){3}"+r,n=new RegExp("^"+t+"$"),i="(?:[0-9a-fA-F]{1,4})",s=new RegExp("^((?:"+i+":){7}(?:"+i+"|:)|(?:"+i+":){6}(?:"+t+"|:"+i+"|:)|(?:"+i+":){5}(?::"+t+"|(:"+i+"){1,2}|:)|(?:"+i+":){4}(?:(:"+i+"){0,1}:"+t+"|(:"+i+"){1,3}|:)|(?:"+i+":){3}(?:(:"+i+"){0,2}:"+t+"|(:"+i+"){1,4}|:)|(?:"+i+":){2}(?:(:"+i+"){0,3}:"+t+"|(:"+i+"){1,5}|:)|(?:"+i+":){1}(?:(:"+i+"){0,4}:"+t+"|(:"+i+"){1,6}|:)|(?::((?::"+i+"){0,5}:"+t+"|(?::"+i+"){1,7}|:)))(%[0-9a-zA-Z]{1,})?$");e.isIPv4=function(e){return n.test(e)},e.isIPv6=function(e){return s.test(e)};var a={};function o(r){if(!e.isIPv4(r))throw new Error("not a valid IPv4 address: "+r);var t=r.split(".");return(parseInt(t[0],10)<<24)+(parseInt(t[1],10)<<16)+(parseInt(t[2],10)<<8)+parseInt(t[3],10)>>>0}function u(e,r){if(Array.isArray(r))return r.some(function(r){return u(e,r)});var t=r,n=t.split("/"),i=n[0],s=n[1],a=parseInt(s,10);if(!i||!Number.isInteger(a))throw new Error("not a valid IPv4 subnet: "+t);if(a<0||a>32)throw new Error("not a valid IPv4 prefix length: "+a+" (from "+t+")");var f=o(i),d=o(e);return 0===a||f>>32-a==d>>32-a}function f(e){return u(e,["10.0.0.0/8","172.16.0.0/12","192.168.0.0/16"])}function d(e){return u(e,"127.0.0.0/8")}function p(e){return u(e,["0.0.0.0/8","100.64.0.0/10","169.254.0.0/16","192.0.0.0/24","192.0.2.0/24","192.88.99.0/24","198.18.0.0/15","198.51.100.0/24","203.0.113.0/24","224.0.0.0/4","240.0.0.0/4","255.255.255.255/32"])}Object.defineProperty(a,"__esModule",{value:!0}),a.isInSubnet=u,a.isPrivate=f,a.isLocalhost=d,a.isReserved=p,a.isSpecial=function(e){return f(e)||d(e)||p(e)};var v={};Object.defineProperty(v,"__esModule",{value:!0});var c=/\./,I=/^(.+:ffff:)(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(?:%.+)?$/,l=/:/,P=/::/;function h(r){if(!e.isIPv6(r))throw new Error("not a valid IPv6 address: "+r);if(c.test(r))return h(function(r){var t=r.match(I);if(!t||!e.isIPv4(t[2]))throw new Error("not a mapped IPv4 address: "+r);var n=t[1],i=t[2].split(c).map(function(e){return parseInt(e,10)});return""+n+((i[0]<<8)+i[1]).toString(16)+":"+((i[2]<<8)+i[3]).toString(16)}(r));var t=r.split(P),n=t[0],i=t[1],s=n&&n.split(l)||[],a=i&&i.split(l)||[],o=new Array(8-(s.length+a.length));return s.concat(o,a)}function w(e,r){if(Array.isArray(r))return r.some(function(r){return w(e,r)});var t=r,n=t.split("/"),i=n[0],s=n[1],a=parseInt(s,10);if(!i||!Number.isInteger(a))throw new Error("not a valid IPv6 CIDR subnet: "+t);if(a<0||a>128)throw new Error("not a valid IPv6 prefix length: "+a+" (from "+t+")");for(var o=h(e),u=h(i),f=0;f<8;++f){var d=Math.min(a-16*f,16);if(d<=0)break;if((u[f]&&parseInt(u[f],16)||0)>>16-d!=(o[f]&&parseInt(o[f],16)||0)>>16-d)return!1}return!0}function b(e){return w(e,["fe80::/10","fc00::/7"])}function M(e){return w(e,"::1/128")}function y(e){return w(e,["::/128","64:ff9b::/96","100::/64","2001::/32","2001:10::/28","2001:20::/28","2001:db8::/32","2002::/16","ff00::/8"])}v.extractMappedIpv4=function(r){var t=r.match(I);if(!t||!e.isIPv4(t[2]))throw new Error("not a mapped IPv4 address: "+r);return t[2]},v.isInSubnet=w,v.isPrivate=b,v.isLocalhost=M,v.isIPv4MappedAddress=function(r){if(w(r,"::ffff:0:0/96")){var t=r.match(I);return Boolean(t&&e.isIPv4(t[2]))}return!1},v.isReserved=y,v.isSpecial=function(e){return b(e)||M(e)||y(e)};var A={};function m(r,t){return Array.isArray(t)?e.isIPv6(r)&&v.isIPv4MappedAddress(r)?v.isInSubnet(r,t.filter(function(r){return e.isIPv6(r.split("/")[0])}))||a.isInSubnet(v.extractMappedIpv4(r),t.filter(function(r){return e.isIPv4(r.split("/")[0])})):e.isIPv6(r)?v.isInSubnet(r,t.filter(function(r){return e.isIPv6(r.split("/")[0])})):a.isInSubnet(r,t.filter(function(r){return e.isIPv4(r.split("/")[0])})):m(r,[t])}return Object.defineProperty(A,"__esModule",{value:!0}),A.IPv4=a,A.IPv6=v,A.isInSubnet=m,A.isPrivate=function(r){return e.isIPv6(r)?v.isIPv4MappedAddress(r)?a.isPrivate(v.extractMappedIpv4(r)):v.isPrivate(r):a.isPrivate(r)},A.isLocalhost=function(r){return e.isIPv6(r)?v.isIPv4MappedAddress(r)?a.isLocalhost(v.extractMappedIpv4(r)):v.isLocalhost(r):a.isLocalhost(r)},A.isIPv4MappedAddress=function(r){return!!e.isIPv6(r)&&v.isIPv4MappedAddress(r)},A.isReserved=function(r){return e.isIPv6(r)?v.isIPv4MappedAddress(r)?a.isReserved(v.extractMappedIpv4(r)):v.isReserved(r):a.isReserved(r)},A.isSpecial=function(r){return e.isIPv6(r)?v.isIPv4MappedAddress(r)?a.isSpecial(v.extractMappedIpv4(r)):v.isSpecial(r):a.isSpecial(r)},A.check=m,A});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,